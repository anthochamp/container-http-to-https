name: Docker

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # eg. linux/amd64,linux/arm64,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/arm/v7,linux/arm/v6
  BUILD_PLATFORMS: linux/amd64,linux/arm64
  DHUB_IMAGE_NAME: ${{ vars.DHUB_IMAGE_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0
        with:
          cosign-release: 'v2.2.4'
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Log into Docker Hub Registry 
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DHUB_USERNAME }}
          password: ${{ secrets.DHUB_PASSWORD }}

      - name: Compose GitHub Container Repository image name
        run: echo "GHCR_IMAGE_NAME=$GH_REPO_OWNER/${GH_REPO_NAME#docker-}" >> $GITHUB_ENV; \
        env:
          GH_REPO_OWNER: ${{ github.repository_owner }}
          GH_REPO_NAME: ${{ github.event.repository.name }}

      - name: Compose Docker Hub repository image name
        run: echo "DHUB_IMAGE_NAME=$DH_USERNAME/${GH_REPO_NAME#docker-}" >> $GITHUB_ENV
        env:
          DH_USERNAME: ${{ secrets.DHUB_USERNAME }}
          GH_REPO_NAME: ${{ github.event.repository.name }}

      - name: Show env1
        run: echo $GHCR_IMAGE_NAME

      - name: Show env2
        run: echo $DHUB_IMAGE_NAME

